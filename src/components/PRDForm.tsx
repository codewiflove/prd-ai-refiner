import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Card } from "@/components/ui/card";
import { Textarea } from "@/components/ui/textarea";
import { useToast } from "@/hooks/use-toast";
import { Sparkles, Send } from "lucide-react";

interface PRDFormProps {
  onPRDGenerated: (prd: string) => void;
}

export const PRDForm = ({ onPRDGenerated }: PRDFormProps) => {
  const { toast } = useToast();
  const [appIdea, setAppIdea] = useState("");
  const [isGenerating, setIsGenerating] = useState(false);

  const generatePRD = async () => {
    if (!appIdea.trim()) {
      toast({
        title: "Missing Information",
        description: "Please describe your app idea first.",
        variant: "destructive"
      });
      return;
    }

    setIsGenerating(true);

    try {
      // For now, generate a basic PRD - later this will use AI
      const prd = `# Product Requirements Document

## Project Brief
**App Idea:** ${appIdea}

## Executive Summary
Based on your idea: "${appIdea.substring(0, 200)}${appIdea.length > 200 ? '...' : ''}"

This document outlines the requirements for developing your application.

## Product Overview
Your application will address the needs described in your initial concept.

## Target Audience
To be defined based on market research and user interviews.

## Key Features
- Core functionality as described in your idea
- User authentication and profile management
- Responsive design for all devices
- Analytics and reporting

## Technical Requirements
- Modern web technologies
- Scalable architecture
- Security best practices
- Performance optimization

## Success Metrics
- User adoption rate
- Feature usage analytics
- User satisfaction scores
- Performance benchmarks

---
*Generated by PRD Genie*`;

      // Store in localStorage
      localStorage.setItem('currentPRD', prd);
      localStorage.setItem('appIdea', appIdea);

      onPRDGenerated(prd);

      toast({
        title: "PRD Generated!",
        description: "Your Product Requirements Document has been created successfully."
      });
    } catch (error) {
      toast({
        title: "Error",
        description: "Failed to generate PRD. Please try again.",
        variant: "destructive"
      });
    } finally {
      setIsGenerating(false);
    }
  };

  const handleKeyPress = (e: React.KeyboardEvent) => {
    if (e.key === 'Enter' && (e.metaKey || e.ctrlKey)) {
      generatePRD();
    }
  };

  return (
    <Card className="p-6 bg-card/50 backdrop-blur-sm border-border animate-float hover:animate-glow-pulse transition-all duration-500 will-change-transform shadow-cosmic hover:shadow-glow">
      <div className="space-y-6">
        <div className="text-center">
          <div className="flex items-center justify-center gap-2 mb-4">
            <Sparkles className="w-6 h-6 text-primary" />
            <h2 className="text-2xl font-bold">Describe Your App Idea</h2>
          </div>
          <p className="text-muted-foreground">
            Tell us about your app idea in your own words. Be as detailed as you'd like - the AI will create a comprehensive PRD from your description.
          </p>
        </div>

        <div className="space-y-4">
          <Textarea
            placeholder="I want to build an app that helps people track their fitness goals. It should have features like workout planning, progress tracking, social sharing, and nutrition logging. The target audience is fitness enthusiasts aged 20-40 who want to stay motivated and connected with other users..."
            value={appIdea}
            onChange={(e) => setAppIdea(e.target.value)}
            onKeyDown={handleKeyPress}
            rows={8}
            className="resize-none text-base leading-relaxed"
          />
          
          <div className="flex items-center justify-between text-sm text-muted-foreground">
            <span>{appIdea.length} characters</span>
            <span>Press Cmd/Ctrl + Enter to generate</span>
          </div>
        </div>

        <Button 
          onClick={generatePRD}
          disabled={!appIdea.trim() || isGenerating}
          variant="cosmic"
          size="lg"
          className="w-full animate-shimmer bg-gradient-cosmic bg-[length:200%_100%] hover:scale-105 transition-transform duration-300"
        >
          {isGenerating ? (
            <>
              <Sparkles className="w-4 h-4 mr-2 animate-spin" />
              Generating PRD...
            </>
          ) : (
            <>
              <Send className="w-4 h-4 mr-2" />
              Generate PRD
            </>
          )}
        </Button>
      </div>
    </Card>
  );
};